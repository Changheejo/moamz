<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.moamz.mapper.admin.eco.AdminEcoMapper">



    <!--진행중인 에코프로젝트 총 갯수 (for pagination)-->
    <select id="selectEcoTotal" resultType="int">
        SELECT COUNT(p.FG_POST_ID)
        FROM  FG_POST p
                  INNER JOIN FG_ECO e on p.FG_POST_ID = e.FG_POST_ID
        WHERE p.FG_POST_TYPE = 'eco' AND e.FG_ECO_STATUS = '1'
    </select>

<!--진행중인 에코프로젝트 목록 보여주기 (pagination O)    -->
    <select id="selectAllIngEcoList" parameterType="Criteria" resultType="AdminIngEcoListDTO">
<![CDATA[
        SELECT *
        FROM (
                 SELECT ROWNUM AS RNUM, FG_POST_FILE_ROOT, FG_POST_FILE_NAME, FG_POST_FILE_UUID, FG_POST_TITLE,
                        FG_POST_ID, FG_POST_LIKES, fgEcoStartToChar, fgEcoEndToChar, FG_ECO_POINTS,
                        FG_ECO_INFO, FG_CERT_INFO, FG_ECO_PARTICIPATION, FG_ECO_PERIOD
                 FROM (
                          SELECT F.FG_POST_FILE_ROOT, F.FG_POST_FILE_NAME, F.FG_POST_FILE_UUID, P.FG_POST_TITLE,
                                 P.FG_POST_ID, P.FG_POST_LIKES,
                                 TO_CHAR(E.FG_ECO_START, 'YYYY/MM/DD') AS fgEcoStartToChar,
                                 TO_CHAR(E.FG_ECO_END, 'YYYY/MM/DD') AS fgEcoEndToChar,
                                 E.FG_ECO_POINTS, E.FG_ECO_INFO, E.FG_CERT_INFO, E.FG_ECO_PARTICIPATION,
                                 TO_CHAR((E.FG_ECO_END - E.FG_ECO_START) + 1) || '일간' AS FG_ECO_PERIOD
                          FROM FG_POST P
                                   JOIN FG_ECO E ON P.FG_POST_ID = E.FG_POST_ID
                                   LEFT JOIN (
                              SELECT FG_POST_FILE_ID, FG_POST_FILE_NAME, FG_POST_FILE_ROOT, FG_POST_FILE_UUID, FG_POST_ID
                              FROM (
                                       SELECT FG_POST_FILE_ID, FG_POST_FILE_NAME, FG_POST_FILE_ROOT, FG_POST_FILE_UUID, FG_POST_ID,
                                              RANK() OVER(PARTITION BY FG_POST_ID ORDER BY FG_POST_FILE_ID ASC) AS RK
                                       FROM FG_POST_FILE
                                   )
                              WHERE RK = 1
                          ) F ON P.FG_POST_ID = F.FG_POST_ID
                          WHERE P.FG_POST_TYPE = 'eco'
                            AND E.FG_ECO_STATUS = '1'
                          ORDER BY P.FG_POST_ID DESC -- 정렬 확정
                      )
             )
        WHERE RNUM <= #{page} * #{amount}
          AND RNUM > (#{page} - 1) * #{amount}
        ]]>
</select>





    <!--종료된 에코프로젝트 총 갯수 (for pagination)-->
    <select id="selectFinEcoTotal" resultType="int">
        SELECT COUNT(p.FG_POST_ID)
        FROM  FG_POST p
                  INNER JOIN FG_ECO e on p.FG_POST_ID = e.FG_POST_ID
        WHERE p.FG_POST_TYPE = 'eco' AND e.FG_ECO_STATUS = '0'
    </select>

    <!--종료된 에코프로젝트 목록 보여주기 (pagination O)    -->
    <select id="selectAllFinEcoList" parameterType="Criteria" resultType="AdminFinEcoListDTO">
<![CDATA[
        SELECT *
        FROM (
                 SELECT ROW_NUMBER() OVER (ORDER BY P.FG_POST_ID DESC) AS RNUM, -- FG_POST_ID 높은 순으로 정렬 후 번호 부여
                        F.FG_POST_FILE_ROOT,
                        F.FG_POST_FILE_NAME,
                        F.FG_POST_FILE_UUID,
                        P.FG_POST_TITLE,
                        P.FG_POST_ID,
                        P.FG_POST_LIKES,
                        TO_CHAR(E.FG_ECO_START, 'YYYY/MM/DD') AS fgEcoStartToChar,
                        TO_CHAR(E.FG_ECO_END, 'YYYY/MM/DD') AS fgEcoEndToChar,
                        E.FG_ECO_POINTS,
                        E.FG_ECO_INFO,
                        E.FG_CERT_INFO,
                        E.FG_ECO_PARTICIPATION,
                        TO_CHAR((E.FG_ECO_END - E.FG_ECO_START) + 1) || '일간' AS FG_ECO_PERIOD
                 FROM FG_POST_FILE PF
                          JOIN FG_POST P ON PF.FG_POST_ID = P.FG_POST_ID
                          JOIN FG_ECO E ON P.FG_POST_ID = E.FG_POST_ID
                          LEFT JOIN (
                     SELECT FG_POST_FILE_ID, FG_POST_FILE_NAME, FG_POST_FILE_ROOT, FG_POST_FILE_UUID, FG_POST_ID
                     FROM (
                              SELECT FG_POST_FILE_ID, FG_POST_FILE_NAME, FG_POST_FILE_ROOT, FG_POST_FILE_UUID, FG_POST_ID,
                                     RANK() OVER(PARTITION BY FG_POST_ID ORDER BY FG_POST_FILE_ID ASC) AS RK
                              FROM FG_POST_FILE
                          )
                     WHERE RK = 1
                 ) F ON PF.FG_POST_ID = F.FG_POST_ID
                 WHERE P.FG_POST_TYPE = 'eco'
                   AND E.FG_ECO_STATUS = '0'
             )
        WHERE RNUM <= #{page} * #{amount}
          AND RNUM > (#{page} - 1) * #{amount}
        ]]>
</select>




    <!--에코프로젝트 글 작성하기 (공통게시글테이블 insert)-->
    <insert id="insertEcoPost" parameterType="AdminEcoWriteDTO">
        <selectKey keyProperty="fgPostId" resultType="Long" order="BEFORE">
            SELECT SEQ_POST.nextval FROM DUAL
        </selectKey>
        INSERT INTO FG_POST (FG_POST_ID, FG_POST_TYPE, FG_POST_TITLE,  FG_USER_CODE)
        VALUES (#{fgPostId}, 'eco', #{fgPostTitle},  #{fgUserCode})
    </insert>

<!--에코프로젝트 글 작성하기 (에코프젝테이블 insert)-->
    <insert id="insertEcoReal" parameterType="AdminEcoWriteDTO">
        INSERT INTO FG_ECO (FG_POST_ID, FG_ECO_START, FG_ECO_END, FG_ECO_PARTICIPATION, FG_ECO_INFO, FG_CERT_INFO, FG_ECO_POINTS)
        VALUES (#{fgPostId}, #{fgEcoStart}, #{fgEcoEnd}, #{fgEcoParticipation}, #{fgEcoInfo}, #{fgCertInfo}, #{fgEcoPoints})
    </insert>


<!--에코프젝 글 작성하기 (썸네일 삽입)-->

<!--&lt;!&ndash;에코프젝  글 수정하기 (공통게시글테이블 UPDATE / 수정여부 업데이트) &ndash;&gt;-->
<!--    <update id="modifyEco" parameterType="AdminEcoModifyDTO">-->
<!--        UPDATE FG_POST-->
<!--        SET  FG_POST_EDIT = '1'-->
<!--        WHERE FG_POST_ID = #{fgPostId}-->
<!--    </update>-->

<!--&lt;!&ndash;에코프젝 글 수정하기 (에코프젝테이블 UPDATE)&ndash;&gt;-->
<!--    <update id="modifyEcoReal" parameterType="AdminEcoModifyDTO">-->
<!--        UPDATE FG_ECO-->
<!--        SET-->
<!--            FG_ECO_START = #{fgEcoStart},-->
<!--            FG_ECO_END = #{fgEcoEnd},-->
<!--            FG_ECO_INFO = #{fgEcoInfo},-->
<!--            FG_CERT_INFO = #{fgCertInfo}-->
<!--        WHERE-->
<!--            FG_POST_ID = #{fgPostId}-->
<!--    </update>-->

<!--&lt;!&ndash;에코프젝 글 수정하기 (썸네일 수정) &ndash;&gt;-->


<!--에코프젝 종료시키기 버튼 클릭시 (처음엔 무조건  FG_ECO_STATUS = '1') -->
<update id="finishBtn" parameterType="Long">
    UPDATE FG_ECO
    SET FG_ECO_STATUS = '0'
    WHERE FG_POST_ID = #{fgPostId}
</update>


<!--진행중인 에코프로젝트 삭제하기-->
    <delete id="deleteEcoProject" parameterType="Long">
        DELETE FROM FG_POST
        WHERE FG_POST_ID = #{fgPostId}
    </delete>



    <!--(진행중/종료된) 특정 한 에코 프로젝트의 인증글 목록보기 (pagination x)-->
<select id="selectEcoCertList" parameterType="Long" resultType="AdminEcoCertListDTO">
    SELECT DISTINCT p.FG_POST_ID, ec.FG_PROJECT_ID , p.FG_POST_TITLE, nu.FG_NORMAL_NICKNAME, p.FG_POST_CREATED_AT,p.FG_POST_LIKES
    FROM FG_POST p
             JOIN FG_NORMAL_USER nu ON p.FG_USER_CODE = nu.FG_USER_CODE
             JOIN FG_ECO_CERT ec ON p.FG_POST_ID = ec.FG_POST_ID
             JOIN FG_ECO e ON ec.FG_PROJECT_ID  = e.FG_POST_ID
    WHERE FG_POST_TYPE = 'ecoCert' AND ec.FG_PROJECT_ID =#{fgProjectId}
    ORDER BY p.FG_POST_LIKES DESC
</select>

    <!--진행중이거나 완료된 특정 한 에코 프젝의 총 인증글 수 조회하기 (for pagination)-->
    <select id="selectEcoCertTotal" parameterType="Long" resultType="int">
        SELECT COUNT(DISTINCT p.FG_POST_ID)
        FROM FG_POST p
                 JOIN FG_NORMAL_USER nu ON p.FG_USER_CODE = nu.FG_USER_CODE
                 JOIN FG_ECO_CERT ec ON p.FG_POST_ID = ec.FG_POST_ID
                 JOIN FG_ECO e ON ec.FG_PROJECT_ID = e.FG_POST_ID
        WHERE p.FG_POST_TYPE = 'ecoCert'
          AND ec.FG_PROJECT_ID = #{fgProjectId}

    </select>

    <!--진행중이거나 완료된 특정 한 에코프젝의 모든 인증글 목록 보기 (pagination o)-->
    <select id="selectAllEcoCertPage" parameterType="map" resultType="AdminEcoCertListDTO">
    <![CDATA[
        SELECT *
        FROM (
                 SELECT ROWNUM AS RNUM,FG_POST_ID,FG_PROJECT_ID,FG_POST_TITLE,FG_NORMAL_NICKNAME,
                        FG_POST_CREATED_AT,FG_POST_LIKES
                 FROM (
                          SELECT DISTINCT p.FG_POST_ID,ec.FG_PROJECT_ID,p.FG_POST_TITLE,nu.FG_NORMAL_NICKNAME,
                                          p.FG_POST_CREATED_AT, p.FG_POST_LIKES
                          FROM FG_POST p
                                   JOIN FG_NORMAL_USER nu ON p.FG_USER_CODE = nu.FG_USER_CODE
                                   JOIN FG_ECO_CERT ec ON p.FG_POST_ID = ec.FG_POST_ID
                                   JOIN FG_ECO e ON ec.FG_PROJECT_ID = e.FG_POST_ID
                          WHERE p.FG_POST_TYPE = 'ecoCert'
                            AND ec.FG_PROJECT_ID = #{fgProjectId}
                          ORDER BY p.FG_POST_LIKES DESC
                      )
                 WHERE ROWNUM <= #{page} * #{amount}
             )
        WHERE RNUM > (#{page} - 1) * #{amount}
        ]]>
    </select>





<!--특정 에코프젝 1개만 조회하기-->
    <select id="selectEcoProjectById" parameterType="java.lang.Long" resultType="AdminIngEcoListDTO">
        SELECT e.FG_ECO_START,
               TO_CHAR(e.FG_ECO_START, 'YYYY-MM-DD') AS fgEcoStartToChar,
               e.FG_ECO_END,
               TO_CHAR(e.FG_ECO_END, 'YYYY-MM-DD') AS fgEcoEndToChar,
               (TRUNC(e.FG_ECO_END) - TRUNC(e.FG_ECO_START)) AS fgEcoPeriod, -- 에코 기간 (일 수 차이)
               e.FG_ECO_PARTICIPATION,
               e.FG_ECO_INFO,
               e.FG_CERT_INFO,
               e.FG_ECO_POINTS,
               e.FG_ECO_STATUS,
               p.FG_POST_ID,
               p.FG_POST_TYPE,
               p.FG_POST_TITLE,
               TO_CHAR(p.FG_POST_CREATED_AT, 'YYYY-MM-DD HH24:MI:SS') AS fgPostCreatedAt,
               p.FG_USER_CODE,
               fpf.FG_POST_FILE_ID,
               fpf.FG_POST_FILE_NAME,
               fpf.FG_POST_FILE_ROOT,
               fpf.FG_POST_FILE_UUID
        FROM FG_ECO e
                 JOIN FG_POST p ON e.FG_POST_ID = p.FG_POST_ID
                 JOIN FG_POST_FILE fpf ON e.FG_POST_ID = fpf.FG_POST_ID
        WHERE e.FG_POST_ID = #{fgPostId}
    </select>




    <!--에코프젝 인증글 상세 보기 -->
<select id="selectEcoCertDetail" parameterType="Long" resultType="AdminEcoCertDetailDTO">
    SELECT p.FG_POST_TITLE,
           uf.FG_USER_FILE_ROOT,uf.FG_USER_FILE_NAME,uf.FG_USER_FILE_UUID,
           nu.FG_NORMAL_NICKNAME,
           p.FG_POST_CREATED_AT,p.FG_POST_LIKES,
           ec.FG_CERT_CONTENT
    FROM FG_POST p
             JOIN FG_COMMON_USER cu ON p.FG_USER_CODE = cu.FG_USER_CODE
             JOIN FG_USER_FILE uf ON p.FG_USER_CODE = uf.FG_USER_CODE
             JOIN FG_NORMAL_USER nu ON p.FG_USER_CODE = nu.FG_USER_CODE
             JOIN FG_ECO_CERT ec ON p.FG_POST_ID = ec.FG_POST_ID
    WHERE p.FG_POST_TYPE = 'ecoCert' AND p.FG_POST_ID = #{fgPostId} AND ec.FG_PROJECT_ID = #{fgProjectId}
</select>

<!--에코프젝 인증글 상세보기 - 댓글부분 <=adminCommentDTO에서 처리 할 듯...-->
    <select id="selectEcoCertDetailComment" parameterType="Long" resultType="AdminCommentDTO">
        SELECT nu.FG_NORMAL_NICKNAME,
               c.FG_COMMENT_DATE, c.FG_COMMENT_EDIT, c.FG_COMMENT_CONTENT
        FROM FG_COMMENT c
                 JOIN FG_NORMAL_USER nu ON c.FG_USER_CODE = nu.FG_USER_CODE
        WHERE c.FG_POST_ID = #{fgPostId}
        ORDER BY c.FG_COMMENT_DATE DESC
    </select>

<!--에코프젝 인증글 작성자에게 포인트 지급하기 버튼-->
    <update id="updateUserEcoPointAndLog" parameterType="AdminEcoCertPointBtnDTO">
        <selectKey keyProperty="fgPointDetailId" resultType="Long" order="BEFORE">
            SELECT SEQ_POINT_DETAIL.nextval FROM DUAL
        </selectKey>

        DECLARE
        v_fg_user_code FG_POINT.FG_USER_CODE%TYPE; --회원번호
        v_fg_point_id FG_POINT.FG_POINT_ID%TYPE; --포인트 ID
        v_fg_post_id FG_POST.FG_POST_ID%TYPE; -- 인증글의 ID
        v_fg_point_received NUMBER; -- 입력한 포인트
        BEGIN
        -- 1. 인증글 작성자의 회원번호 조회
        v_fg_post_id := #{fgPostId}; -- AdminEcoCertPointBtnDTO에서 fgPostId 값 설정
        v_fg_point_received := #{fgPointReceived}; -- AdminEcoCertPointBtnDTO에서 fgPointReceived 값 설정

        SELECT FG_USER_CODE
        INTO v_fg_user_code
        FROM FG_POST p
        JOIN FG_ECO_CERT e ON p.FG_POST_ID = e.FG_POST_ID
        WHERE e.FG_POST_ID = v_fg_post_id;

        -- 2. 해당 유저의 포인트 정보가 있는지 확인하여 포인트 업데이트 또는 삽입
        BEGIN
        -- 포인트 정보가 존재하는 경우 업데이트
        UPDATE FG_POINT
        SET FG_POINT_TOTAL = FG_POINT_TOTAL + v_fg_point_received
        WHERE FG_USER_CODE = v_fg_user_code;

        -- 만약 업데이트된 행이 없다면, 새로 삽입
        IF SQL%ROWCOUNT = 0 THEN
        INSERT INTO FG_POINT (FG_POINT_ID, FG_USER_CODE, FG_POINT_TOTAL)
        VALUES (SEQ_POINT.NEXTVAL, v_fg_user_code, v_fg_point_received);
        END IF;
        END;

        -- 3. 포인트 ID 조회
        SELECT FG_POINT_ID
        INTO v_fg_point_id
        FROM FG_POINT
        WHERE FG_USER_CODE = v_fg_user_code;

        -- 4. 포인트 지급 내역 기록
        INSERT INTO FG_POINT_DETAIL (
        FG_POINT_DETAIL_ID, FG_POINT_RECEIVED_DATE, FG_POINT_RECEIVED, FG_POINT_ID
        )
        VALUES (
        SEQ_POINT_DETAIL.NEXTVAL, SYSDATE, v_fg_point_received, v_fg_point_id  -- 시퀀스 추가
        );
        END;
    </update>
















</mapper>