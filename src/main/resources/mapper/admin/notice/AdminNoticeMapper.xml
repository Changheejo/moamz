<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.moamz.mapper.admin.notice.AdminNoticeMapper">
    <!-- 공지사항 상세보기 -->
    <select id="selectNoticeById" parameterType="Long" resultType="AdminNoticeDetailDTO">
        SELECT p.FG_POST_ID, p.FG_POST_TITLE, cu.FG_USER_TYPE,
               TO_CHAR(p.FG_POST_CREATED_AT, 'YY/MM/DD HH24:MI') AS fgPostCreatedAt,
               n.FG_NOTICE_CONTENT, p.FG_POST_VIEWS
        FROM FG_POST p
                 JOIN FG_NOTICE n ON p.FG_POST_ID = n.FG_POST_ID
                 JOIN FG_COMMON_USER cu ON p.FG_USER_CODE = cu.FG_USER_CODE
        WHERE p.FG_POST_TYPE = 'notice' AND n.FG_POST_ID = #{fgPostId}
    </select>

    <!-- 공지사항 게시판 보기 -->
    <select id="selectNoticeAll" resultType="AdminNoticeListDTO">
        SELECT DISTINCT p.FG_POST_ID,p.FG_POST_TITLE,
                        TO_CHAR(p.FG_POST_CREATED_AT, 'YY/MM/DD HH24:MI') AS fgPostCreatedAt,
                        p.FG_POST_VIEWS
        FROM FG_NOTICE n
                 JOIN FG_POST p ON n.FG_POST_ID = p.FG_POST_ID
    </select>

    <!-- 공지사항 글 작성하기 -->
    <insert id="insertNoticePost" parameterType="AdminNoticeWriteDTO">
        <selectKey keyProperty="fgPostId" resultType="Long" order="BEFORE">
            SELECT SEQ_POST.nextval FROM DUAL
        </selectKey>

        INSERT INTO FG_POST (FG_POST_ID, FG_POST_TYPE, FG_POST_TITLE, FG_USER_CODE)
        VALUES (#{fgPostId}, 'notice', #{fgPostTitle}, (SELECT FG_USER_CODE FROM FG_COMMON_USER WHERE FG_USER_ID = 'admin'))
    </insert>

    <insert id="insertNotice" parameterType="AdminNoticeWriteDTO">
        INSERT INTO FG_NOTICE (FG_POST_ID, FG_NOTICE_CONTENT)
        VALUES (#{fgPostId}, #{fgNoticeContent})
    </insert>

    <!-- 공지사항 글 수정하기 - 공통테이블 수정-->
    <update id="modifyNotice" parameterType="AdminNoticeModifyDTO">
        UPDATE FG_POST
        SET FG_POST_EDIT = '1',
            FG_POST_TITLE = #{fgPostTitle}
        WHERE FG_POST_ID = #{fgPostId}
    </update>

    <!--공지사항 글 수정하기 - 공지사항 테이블 수정-->
    <update id="modifyNoticeReal" parameterType="AdminNoticeModifyDTO">
        UPDATE FG_NOTICE
        SET FG_NOTICE_CONTENT  = #{fgNoticeContent}
        WHERE FG_POST_ID = #{fgPostId}
    </update>

    <!--공지사항 글 삭제하기-->
    <delete id="deleteNotice" parameterType="Long">
        DELETE FROM FG_POST
        WHERE FG_POST_ID = #{fgPostId}
    </delete>

     <!--공지사항 글 총 갯수-->
    <select id="selectNoticeTotal" resultType="int">
        SELECT COUNT(FG_POST_ID)
        FROM FG_POST
        WHERE FG_POST_TYPE ='notice'
    </select>

    <!-- 모든 공지사항 페이지 목록 보기 -->
    <select id="selectAllNoticePage" parameterType="Criteria" resultType="AdminNoticeListDTO">
    <![CDATA[
        SELECT FG_POST_ID, FG_POST_TITLE, fgPostCreatedAt, FG_POST_VIEWS
        FROM (
                 SELECT ROWNUM AS RNUM, FG_POST_ID, FG_POST_TITLE, fgPostCreatedAt, FG_POST_VIEWS
                 FROM (
                          SELECT DISTINCT p.FG_POST_ID, p.FG_POST_TITLE,
                                          TO_CHAR(p.FG_POST_CREATED_AT, 'YY/MM/DD HH24:MI') AS fgPostCreatedAt,
                                          p.FG_POST_VIEWS
                          FROM FG_NOTICE n
                                   JOIN FG_POST p ON n.FG_POST_ID = p.FG_POST_ID
                          ORDER BY p.FG_POST_ID DESC
                      )
                 WHERE ROWNUM <= #{page} * #{amount}
             )
        WHERE RNUM > (#{page} - 1) * #{amount}
        ]]>
</select>











</mapper>
