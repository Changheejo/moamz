<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.moamz.mapper.admin.userMng.UserMngMapper">
    <!--일반회원 관리목록-->
    <select id="selectUserMngList" resultType="UserMngListDTO" >
        SELECT nu.FG_USER_CODE, nu.FG_NORMAL_NICKNAME,cu.FG_USER_ID, cu.FG_USER_JOIN_DATE,
               NVL(pt.FG_POINT_TOTAL, 0) AS FG_POINT_TOTAL,
               COUNT(DISTINCT ps.FG_POST_ID) AS FG_POST_COUNT,  -- 중복 게시글 수 계산
               COUNT(DISTINCT CASE WHEN o.FG_PAYMENT_STATUS = '결제완료' THEN o.FG_ORDER_ID END) AS FG_PURCHASE_COUNT-- 결제완료 주문 건수
        FROM  FG_NORMAL_USER nu
                  JOIN FG_COMMON_USER cu ON nu.FG_USER_CODE = cu.FG_USER_CODE
                  LEFT JOIN FG_POINT pt ON nu.FG_USER_CODE = pt.FG_USER_CODE
                  LEFT JOIN FG_POST ps ON nu.FG_USER_CODE = ps.FG_USER_CODE
                  LEFT JOIN FG_ORDER o ON nu.FG_USER_CODE = o.FG_USER_CODE
        GROUP BY
            nu.FG_USER_CODE,
            nu.FG_NORMAL_NICKNAME,
            cu.FG_USER_ID,
            cu.FG_USER_JOIN_DATE,
            pt.FG_POINT_TOTAL
        ORDER BY  nu.FG_USER_CODE
    </select>

    <!--일반회원 총 인원 수-->
    <select id="selectUserMngTotal" resultType="int">
        SELECT COUNT(FG_USER_CODE)
        FROM FG_COMMON_USER
        WHERE FG_USER_TYPE = '일반회원'
    </select>

    <!--모든 일반회원목록 보기-->
    <select id="selectAllUserMngPage" parameterType="Criteria" resultType="UserMngListDTO">
    <![CDATA[
        SELECT ROWNUM AS RNUM, FG_USER_CODE, FG_NORMAL_NICKNAME, FG_USER_ID, FG_USER_JOIN_DATE, FG_POINT_TOTAL,
               FG_POST_COUNT, FG_PURCHASE_COUNT
        FROM (
                 SELECT ROWNUM AS RNUM, FG_USER_CODE, FG_NORMAL_NICKNAME, FG_USER_ID, FG_USER_JOIN_DATE, FG_POINT_TOTAL,
                        FG_POST_COUNT,FG_PURCHASE_COUNT
                 FROM (
                          SELECT nu.FG_USER_CODE, nu.FG_NORMAL_NICKNAME,cu.FG_USER_ID, cu.FG_USER_JOIN_DATE,
                                 NVL(pt.FG_POINT_TOTAL, 0) AS FG_POINT_TOTAL,
                                 COUNT(DISTINCT ps.FG_POST_ID) AS FG_POST_COUNT,  -- 중복 게시글 수 계산
                                 COUNT(DISTINCT CASE WHEN o.FG_PAYMENT_STATUS = '결제완료' THEN o.FG_ORDER_ID END) AS FG_PURCHASE_COUNT-- 결제완료 주문 건수
                          FROM  FG_NORMAL_USER nu
                                    JOIN FG_COMMON_USER cu ON nu.FG_USER_CODE = cu.FG_USER_CODE
                                    LEFT JOIN FG_POINT pt ON nu.FG_USER_CODE = pt.FG_USER_CODE
                                    LEFT JOIN FG_POST ps ON nu.FG_USER_CODE = ps.FG_USER_CODE
                                    LEFT JOIN FG_ORDER o ON nu.FG_USER_CODE = o.FG_USER_CODE
                          GROUP BY
                              nu.FG_USER_CODE,
                              nu.FG_NORMAL_NICKNAME,
                              cu.FG_USER_ID,
                              cu.FG_USER_JOIN_DATE,
                              pt.FG_POINT_TOTAL
                          ORDER BY  nu.FG_USER_CODE
                      )
                 WHERE ROWNUM <= #{page} * #{amount}
             )
        WHERE RNUM > (#{page} - 1) * #{amount}
        ]]>
    </select>

    <!--판매자회원 관리목록-->
    <select id="selectSellerMngList" resultType="SellerMngListDTO">
        SELECT s.FG_USER_CODE,
               cu.FG_USER_ID,
               cu.FG_USER_JOIN_DATE,
               b.FG_BUSINESS_NAME, -- 업체명
               NVL(AVG(r.FG_REVIEW_RATING), 0) AS FG_AVERAGE_REVIEW_RATING, -- 업체평점
               COUNT(DISTINCT l.FG_LIKE_ID) AS FG_LIKE_COUNT, -- 좋아요수
               SUM(p.FG_PRODUCT_ID) AS FG_PRODUCT_COUNT, -- 상품수
               COUNT(CASE WHEN o.FG_PAYMENT_STATUS = '결제완료' THEN o.FG_PRODUCT_ID END) AS FG_SALES_COUNT -- 판매건수
        FROM FG_SELLER s
                 JOIN FG_COMMON_USER cu ON s.FG_USER_CODE = cu.FG_USER_CODE
                 JOIN FG_BUSINESS b ON s.FG_USER_CODE = b.FG_USER_CODE
                 LEFT JOIN FG_LIKE l ON l.FG_BUSINESS_ID = b.FG_BUSINESS_ID
                 LEFT JOIN FG_PRODUCT p ON p.FG_BUSINESS_ID = b.FG_BUSINESS_ID
                 LEFT JOIN FG_ORDER o ON p.FG_PRODUCT_ID = o.FG_PRODUCT_ID
                 LEFT JOIN FG_REVIEW r ON b.FG_BUSINESS_ID = r.FG_BUSINESS_ID
        GROUP BY
            s.FG_USER_CODE,
            cu.FG_USER_ID,
            cu.FG_USER_JOIN_DATE,
            b.FG_BUSINESS_NAME
    </select>

    <!--판매자 총 인원 수-->
    <select id="selectSellerMngTotal" resultType="int">
        SELECT COUNT(FG_USER_CODE)
        FROM FG_COMMON_USER
        WHERE FG_USER_TYPE = '판매자'
    </select>

    <!--모든 판매자목록 보기-->
    <select id="selectAllSellerMngPage" parameterType="Criteria" resultType="SellerMngListDTO">
    <![CDATA[
        SELECT ROWNUM AS RNUM, FG_USER_CODE, FG_USER_ID, FG_USER_JOIN_DATE,FG_BUSINESS_NAME ,FG_AVERAGE_REVIEW_RATING,
               FG_LIKE_COUNT, FG_PRODUCT_COUNT, FG_SALES_COUNT
        FROM (
                 SELECT ROWNUM AS RNUM, FG_USER_CODE, FG_USER_ID, FG_USER_JOIN_DATE,FG_BUSINESS_NAME, FG_AVERAGE_REVIEW_RATING,
                        FG_LIKE_COUNT, FG_PRODUCT_COUNT, FG_SALES_COUNT
                 FROM (
                          SELECT s.FG_USER_CODE,
                                 cu.FG_USER_ID,
                                 cu.FG_USER_JOIN_DATE,
                                 b.FG_BUSINESS_NAME, -- 업체명
                                 NVL(AVG(r.FG_REVIEW_RATING), 0) AS FG_AVERAGE_REVIEW_RATING, -- 업체평점
                                 COUNT(DISTINCT l.FG_LIKE_ID) AS FG_LIKE_COUNT, -- 좋아요수
                                 SUM(p.FG_PRODUCT_ID) AS FG_PRODUCT_COUNT, -- 상품수
                                 COUNT(CASE WHEN o.FG_PAYMENT_STATUS = '결제완료' THEN o.FG_PRODUCT_ID END) AS FG_SALES_COUNT -- 판매건수
                          FROM FG_SELLER s
                                   JOIN FG_COMMON_USER cu ON s.FG_USER_CODE = cu.FG_USER_CODE
                                   JOIN FG_BUSINESS b ON s.FG_USER_CODE = b.FG_USER_CODE
                                   LEFT JOIN FG_LIKE l ON l.FG_BUSINESS_ID = b.FG_BUSINESS_ID
                                   LEFT JOIN FG_PRODUCT p ON p.FG_BUSINESS_ID = b.FG_BUSINESS_ID
                                   LEFT JOIN FG_ORDER o ON p.FG_PRODUCT_ID = o.FG_PRODUCT_ID
                                   LEFT JOIN FG_REVIEW r ON b.FG_BUSINESS_ID = r.FG_BUSINESS_ID
                          GROUP BY
                              s.FG_USER_CODE,
                              cu.FG_USER_ID,
                              cu.FG_USER_JOIN_DATE,
                              b.FG_BUSINESS_NAME
                      )
                 WHERE ROWNUM <= #{page} * #{amount}
             )
        WHERE RNUM > (#{page} - 1) * #{amount}
        ]]>
    </select>
</mapper>